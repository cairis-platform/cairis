# syntax=docker/dockerfile:1.5-labs

FROM node AS ui
# ref syntax: https://docs.docker.com/engine/reference/commandline/image_build/#git-repositories
ADD https://github.com/cairis-platform/cairis-ui.git /ui
WORKDIR /ui

ENV NODE_OPTIONS=--openssl-legacy-provider

RUN yarn install --immutable --immutable-cache --check-cache
RUN yarn run build


FROM python:3-slim
LABEL org.opencontainers.image.authors="admin@cairis.org"
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config `# mysql` \
    default-libmysqlclient-dev `# mysql` \
    apache2 `# wsgi` \
    apache2-dev `# wsgi` \
    default-mysql-client `# init sql file imports` \
    docbook `# latex` \
    docbook-utils `# latex` \
    dblatex `# latex` \
    texlive-latex-extra `# latex` \
    pandoc `# latex` \
    graphviz `# TODO: unknown` \
    libxml2-dev `# TODO: unknown` \
    libxslt1-dev `# TODO: unknown` \
    libssl-dev `# TODO: unknown` \
    poppler-utils `# TODO: unknown` \
    && rm -rf /var/lib/apt/lists/*

RUN --mount=type=bind,source=requirements.txt,target=/tmp/requirements.txt \
    pip install --requirement /tmp/requirements.txt

RUN --mount=type=bind,source=wsgi_requirements.txt,target=/tmp/wsgi_requirements.txt \
    pip install --requirement /tmp/wsgi_requirements.txt

# config is autogenerated
ENV CAIRIS_CFG=/tmp/cairis.cnf
COPY entrypoint.py /

COPY ./examples /examples

COPY --from=ui /ui/dist /cairis-ui

# Using /cairis instead of /app/cairis, as it is less confusing. Symlink is for out-of-band tools (through docker exec)
ENV PYTHONPATH=/cairis
COPY ./cairis /cairis
RUN ln -s . /cairis/cairis

EXPOSE 8000
USER www-data:www-data
CMD ["python3", "/entrypoint.py"]
